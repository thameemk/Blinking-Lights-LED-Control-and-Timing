;/*******************************************************
;System clock initialization created by the
;CodeWizardAVR V3.37 Automatic Program Generator
;© Copyright 1998-2019 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;*******************************************************/
;
;// I/O Registers definitions
;#include <xmega128b1.h>
;
;// Standard definitions
;#include <stddef.h>
;
;// System Clocks initialization
;void system_clocks_init(void)
; 0001 0012 {

	.CSEG
;PCODE: $00000000 VOL: 0
;PCODE: $00000001 VOL: 0
; 0001 0013 unsigned char n,s;
; 0001 0014 
; 0001 0015 // Optimize for speed
; 0001 0016 #pragma optsize-
; 0001 0017 // Save interrupts enabled/disabled state
; 0001 0018 s=SREG;
;PCODE: $00000002 VOL: 0
;PCODE: $00000003 VOL: 0
;	n -> R17
;	s -> R16
;PCODE: $00000004 VOL: 0
;PCODE: $00000005 VOL: 0
; 0001 0019 // Disable interrupts
; 0001 001A #asm("cli")
;PCODE: $00000006 VOL: 0
; 0001 001B 
; 0001 001C // Internal 2 MHz RC oscillator initialization
; 0001 001D // Enable the internal 2 MHz RC oscillator
; 0001 001E OSC.CTRL|=OSC_RC2MEN_bm;
;PCODE: $00000007 VOL: 1
;PCODE: $00000008 VOL: 0
;PCODE: $00000009 VOL: 1
; 0001 001F // Wait for the internal 2 MHz RC oscillator to stabilize
; 0001 0020 while ((OSC.STATUS & OSC_RC2MRDY_bm)==0);
;PCODE: $0000000A VOL: 0
;PCODE: $0000000B VOL: 1
;PCODE: $0000000C VOL: 0
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0001 0021 
; 0001 0022 // Disable the auto-calibration of the internal 2 MHz RC oscillator
; 0001 0023 DFLLRC2M.CTRL=0<<DFLL_ENABLE_bp;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 1
; 0001 0024 
; 0001 0025 // System Clock prescaler A division factor: 1
; 0001 0026 // System Clock prescalers B & C division factors: B:1, C:1
; 0001 0027 // ClkPer4: 2000.000 kHz
; 0001 0028 // ClkPer2: 2000.000 kHz
; 0001 0029 // ClkPer:  2000.000 kHz
; 0001 002A // ClkCPU:  2000.000 kHz
; 0001 002B n=(CLK.PSCTRL & (~(CLK_PSADIV_gm | CLK_PSBCDIV1_bm | CLK_PSBCDIV0_bm))) |
; 0001 002C 	CLK_PSADIV_1_gc | CLK_PSBCDIV_1_1_gc;
;PCODE: $00000012 VOL: 1
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0001 002D CCP=CCP_IOREG_gc;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0001 002E CLK.PSCTRL=n;
;PCODE: $00000019 VOL: 1
;PCODE: $0000001A VOL: 0
; 0001 002F 
; 0001 0030 // Select the system clock source: 2 MHz Internal RC Osc.
; 0001 0031 n=(CLK.CTRL & (~CLK_SCLKSEL_gm)) | CLK_SCLKSEL_RC2M_gc;
;PCODE: $0000001B VOL: 1
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0001 0032 CCP=CCP_IOREG_gc;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0001 0033 CLK.CTRL=n;
;PCODE: $00000021 VOL: 1
;PCODE: $00000022 VOL: 0
; 0001 0034 
; 0001 0035 // Disable the unused oscillators: 32 kHz, 32 MHz, external clock/crystal oscillator, PLL
; 0001 0036 OSC.CTRL&= ~(OSC_RC32KEN_bm | OSC_RC32MEN_bm | OSC_XOSCEN_bm | OSC_PLLEN_bm);
;PCODE: $00000023 VOL: 1
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 1
; 0001 0037 
; 0001 0038 // ClkPer output disabled
; 0001 0039 PORTCFG.CLKEVOUT&= ~(PORTCFG_CLKOUTSEL_gm | PORTCFG_CLKOUT_gm);
;PCODE: $00000026 VOL: 1
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 1
; 0001 003A // Restore interrupts enabled/disabled state
; 0001 003B SREG=s;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0001 003C // Restore optimization for size if needed
; 0001 003D #pragma optsize_default
; 0001 003E }
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;
